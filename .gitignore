# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
bc-insights-tui
bc-insights-tui.exe

# Linting tools (should be installed via CI or locally, not committed)
golangci-lint

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# Go module download cache
# This is typically handled by Go itself, but can be ignored if needed
# go.sum is usually committed, but if you want to ignore it:
# go.sum

# Environment files
.env
.env.local
.env.development
.env.test
.env.production

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows specific
desktop.ini

# Temporary files
*.tmp
*.temp
*_temp
*_tmp

# Log files
*.log
logs/

# Configuration files that might contain secrets
config.json
secrets.json
*.key
*.pem
*.p12
*.pfx

# Test artifacts
coverage.html
coverage.out
profile.out

# UI test output files (for debugging, preserved after tests)
ui_test_output/
custom_ui_output/

# Development and debugging
debug
debug.exe
__debug_bin

# Air live reload tool (if used)
tmp/
.air.toml

# Azure and authentication tokens (for this specific project)
.azure/
tokens/
auth-cache/

# Application Insights related (sensitive data)
*.insights
appinsights-cache/

# Build artifacts
build/
dist/
out/

# Documentation generated files
docs/_site/
docs/.jekyll-cache/

# Backup files
*.bak
*.backup
